/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt { quick-tap-ms = <200>; };

&sk { quick-release; };

/ {
    behaviors {
        hold_tap_left: hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55>;
            hold-trigger-on-release;
        };

        hold_tap_right: hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 52>;
        };

        lpar_lt: lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_LT";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        rpar_gt: rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_GT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        open-square-bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <45 46>;
        };

        close-square-bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
        };

        lpar-lt {
            bindings = <&lpar_lt>;
            key-positions = <31 32>;
        };

        rpar-gt {
            bindings = <&rpar_gt>;
            key-positions = <32 33>;
        };

        backspacke {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <20 21>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <28 27>;
        };

        grave-escape {
            bindings = <&gresc>;
            key-positions = <27 26>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 14>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <37 38>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <48 47>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&none  &kp N1                     &kp N2                     &kp N3                         &kp N4                       &kp N5                     &kp N6     &kp N7                         &kp N8                           &kp N9                       &kp N0                               &none
&none  &kp Q                      &kp W                      &kp E                          &kp R                        &kp T                      &kp Y      &kp U                          &kp I                            &kp O                        &kp P                                &none
&none  &hold_tap_left LEFT_WIN A  &hold_tap_left LEFT_ALT S  &hold_tap_left LEFT_CONTROL D  &hold_tap_left LEFT_SHIFT F  &kp G                      &kp H      &hold_tap_right RIGHT_SHIFT J  &hold_tap_right RIGHT_CONTROL K  &hold_tap_right RIGHT_ALT L  &hold_tap_right RIGHT_WIN SEMICOLON  &none
&none  &kp Z                      &kp X                      &kp C                          &kp V                        &kp B      &none    &none  &kp N      &kp M                          &kp COMMA                        &kp DOT                      &kp FSLH                             &none
                                                             &none                          &kp ESCAPE                   &kp SPACE  &mo 1    &mo 2  &kp SPACE  &kp ENTER                      &none
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6          &kp F7         &kp F8        &kp F9     &kp F10  &kp F11
&trans   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6          &kp N7         &kp N8        &kp N9     &kp N0   &trans
&trans   &trans  &trans  &trans  &trans  &trans                    &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans   &trans
                         &trans  &trans  &trans  &trans    &trans  &trans          &trans         &trans
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans        &trans           &trans          &trans     &trans      &trans                         &trans     &trans         &trans        &trans                &trans                 &trans
&trans        &kp EXCLAMATION  &kp AT_SIGN     &kp POUND  &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans        &trans           &kp UNDERSCORE  &kp MINUS  &kp PLUS    &kp EQUAL                      &trans     &trans         &trans        &trans                &kp PIPE               &trans
&kp CAPSLOCK  &trans           &trans          &trans     &trans      &trans       &trans    &trans  &trans     &trans         &trans        &trans                &kp BACKSLASH          &trans
                                               &trans     &trans      &trans       &trans    &trans  &trans     &trans         &trans
            >;
        };

        Media {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none           &none              &none            &none       &none             &none
&none  &none  &none  &none  &none  &none                  &none           &none              &none            &none       &kp C_PLAY_PAUSE  &none
&none  &none  &none  &none  &none  &none                  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none             &none
&none  &none  &none  &none  &none  &none  &none    &none  &none           &kp C_MUTE         &none            &none       &none             &none
                     &none  &none  &none  &none    &none  &none           &none              &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        media_layer_activation {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
